#
# Description: Build Project using GitHub Actions
#

name: Make X64 Menuconfig

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH to Action'
        required: false
        default: 'true'
      repository:
        description: 'Repository URL'
        required: true
        default: 'https://github.com/openwrt/openwrt'
      branch:
        description: 'Branch'
        required: true
        default: 'openwrt-23.05'
      commit:
        description: 'Back to Commit'
        required: false
        default: ''
env:
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: config/op_x64_test.config
  DIY_P1_SH: scripts/op_diy.sh
  DIY_P2_SH: scripts/op_x64.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_PKG_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Before freeing up disk space
      run: |
        echo "Before freeing up disk space"
        echo "=============================================================================="
        df -hT
        echo "=============================================================================="
        
    - name: "Optimize Disk Space"
      uses: "hugoalh/disk-space-optimizer-ghaction@main"
      with:
        operate_sudo: "True"
        general_include: ".+"
        general_exclude: |-
          ^GCC$
          ^G\+\+$
          Clang
          LLVM
        docker_include: ".+"
        docker_prune: "True"
        docker_clean: "True"
        apt_prune: "True"
        apt_clean: "True"
        homebrew_prune: "True"
        homebrew_clean: "True"
        npm_prune: "True"
        npm_clean: "True"
        os_swap: "True"

#    - name: Freeing up disk space
#      uses: easimon/maximize-build-space@master
#      with: 
#        root-reserve-mb: 2048
#       swap-size-mb: 1
#        remove-dotnet: 'true'
#        remove-android: 'true'
#        remove-haskell: 'true'
#        remove-codeql: 'true'
#        remove-docker-images: 'true'

    - name: Free up disk space complete
      run: |
        echo "Free up disk space complete"
        echo "=============================================================================="
        df -hT
        echo "=============================================================================="

    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        # docker rmi `docker images -q`
        # sudo -E apt-get -qq -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq -y install $(curl -fsSL https://raw.githubusercontent.com/jliveusa/AutoWRT/main/config/depends-ubuntu)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        # set environment
        echo "COMMIT=${{ github.event.inputs.commit }}" >> $GITHUB_ENV
        echo "BRANCH=${{ github.event.inputs.branch }}" >> $GITHUB_ENV
        echo "REPO_URL=${{ github.event.inputs.repository }}" >> $GITHUB_ENV

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $BRANCH openwrt
        cd openwrt
        git checkout $COMMIT        
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        
    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cp -f $DIY_P1_SH openwrt/diy.sh
        cd openwrt && ./diy.sh
        
    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        #[ -e files ] && mv files openwrt/files && chmod -R 755 openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cp -f $DIY_P2_SH openwrt/x64.sh
        cd openwrt && ./x64.sh
        
    - name: SSH to Action
      uses: mxschmitt/action-tmate@master
      timeout-minutes: 90
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Download package
      id: download
      run: |
        cd openwrt
        make defconfig
        sudo mkdir -p /buildinfo
        sudo cp -f .config /buildinfo/config.buildinfo
        cd /buildinfo
        echo "BUILDINFO=$PWD" >> $GITHUB_ENV
             
    - name: Upload buildinfo
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt_Config
        path: ${{ env.BUILDINFO }}/*
